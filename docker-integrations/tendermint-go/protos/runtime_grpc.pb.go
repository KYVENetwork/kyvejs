// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.24.4
// source: runtime.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// RuntimeClient is the client API for Runtime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RuntimeClient interface {
	GetRuntimeName(ctx context.Context, in *GetRuntimeNameRequest, opts ...grpc.CallOption) (*GetRuntimeNameResponse, error)
	GetRuntimeVersion(ctx context.Context, in *GetRuntimeVersionRequest, opts ...grpc.CallOption) (*GetRuntimeVersionResponse, error)
	ValidateSetConfig(ctx context.Context, in *ValidateSetConfigRequest, opts ...grpc.CallOption) (*ValidateSetConfigResponse, error)
	GetDataItem(ctx context.Context, in *GetDataItemRequest, opts ...grpc.CallOption) (*GetDataItemResponse, error)
	PrevalidateDataItem(ctx context.Context, in *PrevalidateDataItemRequest, opts ...grpc.CallOption) (*PrevalidateDataItemResponse, error)
	TransformDataItem(ctx context.Context, in *TransformDataItemRequest, opts ...grpc.CallOption) (*TransformDataItemResponse, error)
	ValidateDataItem(ctx context.Context, in *ValidateDataItemRequest, opts ...grpc.CallOption) (*ValidateDataItemResponse, error)
	SummarizeDataBundle(ctx context.Context, in *SummarizeDataBundleRequest, opts ...grpc.CallOption) (*SummarizeDataBundleResponse, error)
	NextKey(ctx context.Context, in *NextKeyRequest, opts ...grpc.CallOption) (*NextKeyResponse, error)
}

type runtimeClient struct {
	cc grpc.ClientConnInterface
}

func NewRuntimeClient(cc grpc.ClientConnInterface) RuntimeClient {
	return &runtimeClient{cc}
}

func (c *runtimeClient) GetRuntimeName(ctx context.Context, in *GetRuntimeNameRequest, opts ...grpc.CallOption) (*GetRuntimeNameResponse, error) {
	out := new(GetRuntimeNameResponse)
	err := c.cc.Invoke(ctx, "/Runtime/GetRuntimeName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) GetRuntimeVersion(ctx context.Context, in *GetRuntimeVersionRequest, opts ...grpc.CallOption) (*GetRuntimeVersionResponse, error) {
	out := new(GetRuntimeVersionResponse)
	err := c.cc.Invoke(ctx, "/Runtime/GetRuntimeVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) ValidateSetConfig(ctx context.Context, in *ValidateSetConfigRequest, opts ...grpc.CallOption) (*ValidateSetConfigResponse, error) {
	out := new(ValidateSetConfigResponse)
	err := c.cc.Invoke(ctx, "/Runtime/ValidateSetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) GetDataItem(ctx context.Context, in *GetDataItemRequest, opts ...grpc.CallOption) (*GetDataItemResponse, error) {
	out := new(GetDataItemResponse)
	err := c.cc.Invoke(ctx, "/Runtime/GetDataItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) PrevalidateDataItem(ctx context.Context, in *PrevalidateDataItemRequest, opts ...grpc.CallOption) (*PrevalidateDataItemResponse, error) {
	out := new(PrevalidateDataItemResponse)
	err := c.cc.Invoke(ctx, "/Runtime/PrevalidateDataItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) TransformDataItem(ctx context.Context, in *TransformDataItemRequest, opts ...grpc.CallOption) (*TransformDataItemResponse, error) {
	out := new(TransformDataItemResponse)
	err := c.cc.Invoke(ctx, "/Runtime/TransformDataItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) ValidateDataItem(ctx context.Context, in *ValidateDataItemRequest, opts ...grpc.CallOption) (*ValidateDataItemResponse, error) {
	out := new(ValidateDataItemResponse)
	err := c.cc.Invoke(ctx, "/Runtime/ValidateDataItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) SummarizeDataBundle(ctx context.Context, in *SummarizeDataBundleRequest, opts ...grpc.CallOption) (*SummarizeDataBundleResponse, error) {
	out := new(SummarizeDataBundleResponse)
	err := c.cc.Invoke(ctx, "/Runtime/SummarizeDataBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeClient) NextKey(ctx context.Context, in *NextKeyRequest, opts ...grpc.CallOption) (*NextKeyResponse, error) {
	out := new(NextKeyResponse)
	err := c.cc.Invoke(ctx, "/Runtime/NextKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuntimeServer is the server API for Runtime service.
// All implementations must embed UnimplementedRuntimeServer
// for forward compatibility
type RuntimeServer interface {
	GetRuntimeName(context.Context, *GetRuntimeNameRequest) (*GetRuntimeNameResponse, error)
	GetRuntimeVersion(context.Context, *GetRuntimeVersionRequest) (*GetRuntimeVersionResponse, error)
	ValidateSetConfig(context.Context, *ValidateSetConfigRequest) (*ValidateSetConfigResponse, error)
	GetDataItem(context.Context, *GetDataItemRequest) (*GetDataItemResponse, error)
	PrevalidateDataItem(context.Context, *PrevalidateDataItemRequest) (*PrevalidateDataItemResponse, error)
	TransformDataItem(context.Context, *TransformDataItemRequest) (*TransformDataItemResponse, error)
	ValidateDataItem(context.Context, *ValidateDataItemRequest) (*ValidateDataItemResponse, error)
	SummarizeDataBundle(context.Context, *SummarizeDataBundleRequest) (*SummarizeDataBundleResponse, error)
	NextKey(context.Context, *NextKeyRequest) (*NextKeyResponse, error)
	mustEmbedUnimplementedRuntimeServer()
}

// UnimplementedRuntimeServer must be embedded to have forward compatible implementations.
type UnimplementedRuntimeServer struct {
}

func (UnimplementedRuntimeServer) GetRuntimeName(context.Context, *GetRuntimeNameRequest) (*GetRuntimeNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRuntimeName not implemented")
}
func (UnimplementedRuntimeServer) GetRuntimeVersion(context.Context, *GetRuntimeVersionRequest) (*GetRuntimeVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRuntimeVersion not implemented")
}
func (UnimplementedRuntimeServer) ValidateSetConfig(context.Context, *ValidateSetConfigRequest) (*ValidateSetConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateSetConfig not implemented")
}
func (UnimplementedRuntimeServer) GetDataItem(context.Context, *GetDataItemRequest) (*GetDataItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataItem not implemented")
}
func (UnimplementedRuntimeServer) PrevalidateDataItem(context.Context, *PrevalidateDataItemRequest) (*PrevalidateDataItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrevalidateDataItem not implemented")
}
func (UnimplementedRuntimeServer) TransformDataItem(context.Context, *TransformDataItemRequest) (*TransformDataItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransformDataItem not implemented")
}
func (UnimplementedRuntimeServer) ValidateDataItem(context.Context, *ValidateDataItemRequest) (*ValidateDataItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateDataItem not implemented")
}
func (UnimplementedRuntimeServer) SummarizeDataBundle(context.Context, *SummarizeDataBundleRequest) (*SummarizeDataBundleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SummarizeDataBundle not implemented")
}
func (UnimplementedRuntimeServer) NextKey(context.Context, *NextKeyRequest) (*NextKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NextKey not implemented")
}
func (UnimplementedRuntimeServer) mustEmbedUnimplementedRuntimeServer() {}

// UnsafeRuntimeServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RuntimeServer will
// result in compilation errors.
type UnsafeRuntimeServer interface {
	mustEmbedUnimplementedRuntimeServer()
}

func RegisterRuntimeServer(s grpc.ServiceRegistrar, srv RuntimeServer) {
	s.RegisterService(&Runtime_ServiceDesc, srv)
}

func _Runtime_GetRuntimeName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRuntimeNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).GetRuntimeName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/GetRuntimeName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).GetRuntimeName(ctx, req.(*GetRuntimeNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_GetRuntimeVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRuntimeVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).GetRuntimeVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/GetRuntimeVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).GetRuntimeVersion(ctx, req.(*GetRuntimeVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_ValidateSetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateSetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).ValidateSetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/ValidateSetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).ValidateSetConfig(ctx, req.(*ValidateSetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_GetDataItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDataItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).GetDataItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/GetDataItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).GetDataItem(ctx, req.(*GetDataItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_PrevalidateDataItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrevalidateDataItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).PrevalidateDataItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/PrevalidateDataItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).PrevalidateDataItem(ctx, req.(*PrevalidateDataItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_TransformDataItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransformDataItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).TransformDataItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/TransformDataItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).TransformDataItem(ctx, req.(*TransformDataItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_ValidateDataItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateDataItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).ValidateDataItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/ValidateDataItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).ValidateDataItem(ctx, req.(*ValidateDataItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_SummarizeDataBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SummarizeDataBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).SummarizeDataBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/SummarizeDataBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).SummarizeDataBundle(ctx, req.(*SummarizeDataBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Runtime_NextKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NextKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeServer).NextKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Runtime/NextKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeServer).NextKey(ctx, req.(*NextKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Runtime_ServiceDesc is the grpc.ServiceDesc for Runtime service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Runtime_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Runtime",
	HandlerType: (*RuntimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRuntimeName",
			Handler:    _Runtime_GetRuntimeName_Handler,
		},
		{
			MethodName: "GetRuntimeVersion",
			Handler:    _Runtime_GetRuntimeVersion_Handler,
		},
		{
			MethodName: "ValidateSetConfig",
			Handler:    _Runtime_ValidateSetConfig_Handler,
		},
		{
			MethodName: "GetDataItem",
			Handler:    _Runtime_GetDataItem_Handler,
		},
		{
			MethodName: "PrevalidateDataItem",
			Handler:    _Runtime_PrevalidateDataItem_Handler,
		},
		{
			MethodName: "TransformDataItem",
			Handler:    _Runtime_TransformDataItem_Handler,
		},
		{
			MethodName: "ValidateDataItem",
			Handler:    _Runtime_ValidateDataItem_Handler,
		},
		{
			MethodName: "SummarizeDataBundle",
			Handler:    _Runtime_SummarizeDataBundle_Handler,
		},
		{
			MethodName: "NextKey",
			Handler:    _Runtime_NextKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtime.proto",
}
